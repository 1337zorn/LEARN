Hey, in this course, we'll dive into Git,
 a system for tracking changes in files and coordinating work in teams.

    $ git init

        Initialized empty Git repository in ////.git/

While Git is very popular for software projects, we can use it to keep track of changes in any file.
But what exactly did we just do?

We've just created a repository, which is a special directory, that imports our work to Git.
Every project we want to track needs such a repository.

    $ mkdir project
    $ cd project
    $ git init
    
        Initialized empty Git repository in /Users/user/project/.git/

Psst: Repositories are also reffered to as repos.

Sweet! With git init, we can turn an ordinary directory into a repository and start tracking changes.
-
Up until now, we haven't made any changes to our repository, have we?
In order to confirm that, let's check it's status!

    $ git status

        on Branch master
        Initial commit
        nothing to commig (create/copy files and use "git add" to track)

Psst: when there arent any files with changes in the working directory, we say that the directory is clean.

Every Git starts withthe git command. Don't worry about branches for now. 
All we need to know is that we're working on the master branch!
-
It's time to make some changes. Let's create a text file an check the status of the repository again!

    $ touch cookie.txt
    $ git status

        On branch master
        Initial commit
        Untracked files:
            cookie.txt
        nothing added to commit but untracked files present
        (use "git add" to track)

Right there! The git status command reveals that cookie.txt is currently untracked.

Now, in order to keep track of cookie.txt we need to add it to the list of tracked files.

    $ git add cookie.txt
    $ git add status

yay test